public class BinaryTree extends TreeNode<Object, Object>{
	//This tree will be made such that it always goes left first and right after.
	
	private TreeNode<?,?> root;
	//The start of the tree or subtree.
	
	private TreeNode<?,?> left;
	//The left child of the root.
	
	private TreeNode<?,?> right;
	//The right child of the root.
	
	public BinaryTree(TreeNode<?, ?> root)
	{
		this.root = root;
		this.left = null;
		this.right = null;
	}
	
	public BinaryTree()
	{
		this.root = null;
		this.left = null;
		this.right = null;
	}
	
	public static void main(String[] args)
	{
		TreeNode<Integer, Integer> testerR = new TreeNode<Integer, Integer>();
		testerR.setKey(1);
		testerR.setValue(1);
		
		TreeNode<Integer, Integer> testerL = new TreeNode<Integer, Integer>();
		testerL.setKey(3);
		testerL.setValue(3);
		
		TreeNode<Integer, Integer> tester = new TreeNode<Integer, Integer>();
		tester.setKey(2);
		tester.setValue(2);
		tester.setRight(testerR);
		tester.setLeft(testerL);
		
		BinaryTree test = new BinaryTree(tester);
	}
}
